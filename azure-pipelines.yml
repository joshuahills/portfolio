trigger:
- master

pool:
  name: Windows VM

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '6.4.0'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonarcloud'
    organization: 'joshuahills'
    scannerMode: 'MSBuild'
    projectKey: 'joshuahills_portfolio'
    extraProperties: 'sonar.cs.opencover.reportsPaths="$(Build.SourcesDirectory)/coverlet/reports/SonarQube.xml"'

- task: VisualStudioTestPlatformInstaller@1
  inputs:
    packageFeedSelector: 'nugetOrg'
    versionSelector: 'latestStable'

- task: Npm@1
  displayName: '[Web] npm install'
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)/Portfolio.Web'

- task: Npm@1
  displayName: '[Web] Build'
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/Portfolio.Web'
    customCommand: 'run build:prod'

- task: PublishBuildArtifacts@1
  displayName: '[Web] Publish'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/Portfolio.Web/dist'
    ArtifactName: 'Portfolio Web'
    publishLocation: 'Container'

- task: DotNetCoreCLI@2
  displayName: '[Api] Build'
  inputs:
    command: 'custom'
    projects: '$(System.DefaultWorkingDirectory)/**/*.sln'
    custom: 'msbuild'
    arguments: '-restore -p:configuration=$(BuildConfiguration);DeployOnBuild=true;UseWPP_CopyWebApplication=true;PipelineDependsOnBuild=false'''

- task: DotNetCoreCLI@2
  displayName: '[Api] Run unit tests'
  inputs:
    command: 'test'
    projects: 'Tests/**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'

- task: PublishBuildArtifacts@1
  displayName: '[Api] Publish'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/Portfolio.Api/bin/$(BuildConfiguration)/net7.0'
    ArtifactName: 'Portfolio API'
    publishLocation: 'Container'

- script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.opencover.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"sonarqube;cobertura;html"'  
  displayName: 'Create code coverage reports'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:  
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'