trigger:
- master

pool:
  name: Windows VM

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '6.4.0'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonarcloud'
    organization: 'joshuahills'
    scannerMode: 'MSBuild'
    projectKey: 'joshuahills_portfolio'
    extraProperties: 'sonar.cs.opencover.reportsPaths="$(Build.SourcesDirectory)\Coverage.xml"'

- task: VisualStudioTestPlatformInstaller@1
  inputs:
    packageFeedSelector: 'nugetOrg'
    versionSelector: 'latestStable'

- task: Npm@1
  displayName: '[Web] npm install'
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)/Portfolio.Web'

- task: Npm@1
  displayName: '[Web] Build'
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/Portfolio.Web'
    customCommand: 'run build:prod'

- task: PublishBuildArtifacts@1
  displayName: '[Web] Publish'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/Portfolio.Web/dist'
    ArtifactName: 'Portfolio Web'
    publishLocation: 'Container'

- task: DotNetCoreCLI@2
  displayName: '[Api] Build'
  inputs:
    command: 'custom'
    projects: '$(System.DefaultWorkingDirectory)/**/*.sln'
    custom: 'msbuild'
    arguments: '-restore -p:configuration=$(BuildConfiguration);DeployOnBuild=true;UseWPP_CopyWebApplication=true;PipelineDependsOnBuild=false'''

- task: DotNetCoreCLI@2
  displayName: '[Api] Unit tests'
  inputs:
    command: 'test'
    projects: 'Tests/**/*.csproj'
    arguments: '--collect "Code Coverage"'

- task: PublishBuildArtifacts@1
  displayName: '[Api] Publish'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/Portfolio.Api/bin/$(BuildConfiguration)/net7.0'
    ArtifactName: 'Portfolio API'
    publishLocation: 'Container'

- task: CmdLine@2
  name: CodeCoverage_ReportGenertor
  inputs:
    script: |
      "$(OpenCover)" -target:"C:\Program Files (x86)\NUnit.org\nunit-console\nunit3-console.exe" -filter:"+[*]* -[AutoFixture]* -[nunit.framework]* -[mscorlib]* -[mscorlib.*]* -[System]* -[System.*]* -[Microsoft.VisualStudio]* -[FluentAssertions]* -[Moq]* -[Quartz]* -[*]Properties.*" -skipautoprops -targetargs:"$(Build.SourcesDirectory)\UnitTests\bin\Prod\$(UnitTestDll)" -excludebyattribute:"*ExcludeFromCodeCoverage*" -register:administrator -output:"$(Build.SourcesDirectory)\Unit Tests Code Coverage.xml"
    workingDirectory: '$(Build.SourcesDirectory)'

- task: reportgenerator@5
  inputs:
    reports: '$(Build.SourcesDirectory)\Unit Tests Code Coverage'
    targetdir: '$(Build.SourcesDirectory)\Unit Tests Code Coverage'
    reporttypes: 'Html;Cobertura;SonarQube'
    title: 'Code Coverage'

- task: CopyFiles@2
  name: Copy_Code_Coverage_Reports
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'Code Coverage Report*\**'
    TargetFolder: '$(Build.SourcesDirectory)\CodeCoverageReports'
  
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Code Coverage Reports'
  inputs:
    PathtoPublish: "$(Build.SourcesDirectory)/CodeCoverageReports"
    ArtifactName: UnitTestCodeCoverageReports

- task: PublishCodeCoverageResults@1
  name: Publish_UnitTestCodeCoverageReport
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)\Cobertura\Unit\Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)\Cobertura\UnitTests'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'